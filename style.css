@charset "UTF-8";
/*
This project follows the ITCSS architecture:
http://www.creativebloq.com/web-design/manage-large-css-projects-itcss-101517528
*/
/*
Declaration Structure:
 Sass 
Positioning 
Display & Box Model 
Color
 Text
 Other 
Responsive 
*/
/*

01. Settings

If you are using a preprocessor, start here. This holds any global settings for your project. I'd like to stress the word global – this layer should only house settings that need to be accessed from anywhere. Settings like $heading-size-1 should be defined in the Headings partial. This ensures this layer stays nice and slim, and means that most settings can be found alongside the code that uses them, making finding things far simpler.

Examples of global settings might be things like the base font size, colour palettes, config (for example, $environment: dev;) and so on.

*/
@font-face {
  font-family: "Proxima Nova";
  src: url("fonts/proxima-nova-regular.otf"); }

@font-face {
  font-family: "Proxima Nova";
  src: url("fonts/proxima-nova-bold.otf");
  font-weight: 700; }

@font-face {
  font-family: "Proxima Nova";
  src: url("fonts/proxima-nova-semibold.otf");
  font-weight: 600; }

/*

02. Tools

The next layer houses your globally available tooling – namely mixins and functions. Any mixin or function that does not need accessing globally should belong in the partial to which it relates. The Tools layer comes after the Settings layer because a mixin may require one of the global settings as a default parameter. Examples of global tools might be gradient mixins, font-sizing mixins and so on.

*/
/*

03. Generic

The Generic layer is the first one that actually produces any CSS. It houses very high-level, far reaching styles. This layer is seldom modified, and is usually the same across any projects you work on. It contains things like Normalize.css, global box-sizing rules, CSS resets and so on. The Generic layer affects a lot of the DOM, hence it being nice and wide in the Triangle model, and occurring very early on.

*/
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

/*
04. Elements

These are bare, unclassed HTML elements. What does an h1 look like without a class on it? What does an a look like without a class on it? The Elements layer binds onto bare HTML element (or 'type') selectors only. It is slightly more explicit than the previous layer in that we are now saying 'make every h1 this big', or 'make every a be a certain colour'. It is still a very low-specificity layer, but affects slightly less of the DOM, and is slightly more opinionated, hence its location in the Triangle.

The Elements layer is typically the last one in which we'd find bare, element-based selectors, and is very rarely added to or changed after initial setup. Once we have defined element-level styles, all additions and deviations should be implemented using classes.
*/
html {
  font-family: "Proxima Nova", san-serif;
  font-size: 16px;
  color: #272727; }

body {
  background-color: white; }

/* Base Headline Styles */
h1 {
  font-weight: 700;
  font-size: 2.8125rem; }

h2 {
  font-weight: 700;
  font-size: 1.875rem; }

h3 {
  font-weight: 700;
  font-size: 0.875rem;
  text-transform: uppercase; }

h4 {
  font-weight: 400;
  font-size: 1.25rem; }

/* Base Paragraph Styles */
p {
  font-size: 1.125rem;
  font-weight: 400;
  color: #636363;
  line-height: 1.2; }

/* Base Link Styles */
a {
  text-decoration: none; }

/*
06. Components

The Components layer is where we begin to style recognisable pieces of UI. We're still binding onto classes here, so our specificity hasn't yet increased. However, this layer is more explicit than the last one in that we are now styling explicit, designed pieces of the DOM.

We shouldn't find any selectors with a lower specificity than one class in this layer. This is where the majority of your work will happen after initial project set-up. Adding new components and features usually makes up the vast majority of development.
*/
header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
  background-color: transparent; }
  header .header-content {
    max-width: 1960px;
    height: 100px; }
    header .header-content .logo {
      z-index: 11;
      position: absolute;
      top: 55px;
      left: 25px;
      width: 65px;
      -webkit-transform: translateY(-50%);
              transform: translateY(-50%);
      color: #fff;
      float: left; }
      header .header-content .logo img {
        width: 100%; }
    header .header-content .menu-icon {
      z-index: 11;
      position: absolute;
      top: 35px;
      right: 25px;
      width: 20px;
      height: 15px;
      cursor: pointer;
      -webkit-transform: rotate(0deg);
              transform: rotate(0deg);
      -webkit-transition: .5s ease-in-out;
      transition: .5s ease-in-out; }
      header .header-content .menu-icon span {
        position: absolute;
        left: 0;
        display: block;
        height: 2px;
        width: 100%;
        background: #fff;
        -webkit-transform: rotate(0deg);
                transform: rotate(0deg);
        -webkit-transition: .25s ease-in-out;
        transition: .25s ease-in-out; }
      header .header-content .menu-icon span:nth-child(1) {
        top: 0px; }
      header .header-content .menu-icon span:nth-child(2) {
        top: 5px; }
      header .header-content .menu-icon span:nth-child(3) {
        top: 10px; }
      header .header-content .menu-icon.open span:nth-child(1) {
        top: 5px;
        -webkit-transform: rotate(135deg);
                transform: rotate(135deg); }
      header .header-content .menu-icon.open span:nth-child(2) {
        left: -60px;
        opacity: 0; }
      header .header-content .menu-icon.open span:nth-child(3) {
        top: 5px;
        -webkit-transform: rotate(-135deg);
                transform: rotate(-135deg); }
    header .header-content .nav-container {
      z-index: 10;
      position: absolute;
      top: -100vh;
      left: 0;
      right: 0;
      height: 100vh;
      background-color: #1BBC9B;
      -webkit-transition: top 0.40s ease;
      transition: top 0.40s ease;
      font-size: 1.25rem;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center; }
      header .header-content .nav-container nav {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
            -ms-flex-direction: column;
                flex-direction: column;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center; }
        header .header-content .nav-container nav ul {
          list-style: none;
          padding: 0;
          margin: 0;
          text-align: center; }
          header .header-content .nav-container nav ul li {
            padding-top: 10px;
            color: #fff;
            text-transform: uppercase;
            letter-spacing: 2px;
            font-weight: bold; }
        header .header-content .nav-container nav .cta-btn {
          margin-top: 50px; }
      header .header-content .nav-container.open {
        top: 0; }

.cta-btn {
  background-color: #1BBC9B;
  border-radius: 2px;
  padding: 12px 0; }
  .cta-btn:hover {
    background-color: #fff; }
  .cta-btn a {
    color: #1BBC9B;
    padding: 15px 30px;
    font-size: 0.8125rem;
    font-weight: 600; }
    .cta-btn a:visited {
      color: #1BBC9B; }
    .cta-btn a:hover {
      color: #fff; }
  .cta-btn.white {
    background-color: #fff; }
    .cta-btn.white:hover {
      background-color: #1BBC9B; }

.hero {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100vh;
  background-image: url("images/dist/running.jpg");
  background-repeat: no-repeat;
  background-position: right 5% top 15%;
  background-size: cover; }
  .hero:before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #1BBC9B;
    opacity: .6; }
  .hero .hero-content {
    z-index: 1;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    max-width: 1960px;
    height: 100%;
    margin: 125px 3vw;
    color: #fff; }
    .hero .hero-content h1.title {
      max-width: 600px;
      margin: 25px auto;
      font-size: 1.125rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 2.25px; }
      @media screen and (min-width: 768px) {
        .hero .hero-content h1.title {
          font-size: 2.1875rem; } }
    .hero .hero-content .line {
      height: 2px;
      width: 35px;
      padding: 1px;
      background-color: #fff; }
      @media screen and (min-width: 768px) {
        .hero .hero-content .line {
          width: 45px; } }
    .hero .hero-content .intro {
      max-width: 600px;
      margin: 20px auto;
      font-size: 1rem;
      text-align: center;
      color: #fff; }
      @media screen and (min-width: 768px) {
        .hero .hero-content .intro {
          line-height: 1.7; } }
    .hero .hero-content .cta-btn {
      margin-top: 15px; }
    .hero .hero-content .scroll-down {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
      width: 100%;
      padding-bottom: 50px; }

/*
07. Trumps

This layer beats – or 'trumps' – all other layers, and has the power to override anything at all that has gone before it. It is inelegant and heavy-handed, and contains utility and helper classes, hacks and overrides.

A lot of the declarations in this layer will carry !important (e.g. .text-center { text-align: centre !important; }). This is the highest specificity layer – it includes the most explicit types of rule, with the most narrow focus. This layer forms the point of the Triangle.
*/
.u-hide {
  display: none; }

.u-show {
  display: block; }
